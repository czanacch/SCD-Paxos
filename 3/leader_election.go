package main

import (
	"sync"
)

/**********************************************   LEADER ELECTION  ************************************************/

var timer_T int // Seconds to wait for message replies
var stateMutex = sync.Mutex{}
var mapMutex = sync.Mutex{}

var timer_check int // Timer for the periodic invocation of the Check function
var timer_leader int // Timer: Number of seconds after which a process realizes that its leader has crashed
var T_readyMessage int
var T_areYouThereMessage int
var T_areYouCoordinatorMessage int
var T_acceptMessage int

var s string // State of process: "Election", "Reorganization" o "Normal"
var c string  // IP address of the group leader process
var counter int // Counter of the groups generated by p_i
var g Number // Unique identifier of the group of p_i
var Up map[string]bool // Set of processes participating in the group (excluding p_i)
var merge_invocated bool // p_i has already invoked Merge or not